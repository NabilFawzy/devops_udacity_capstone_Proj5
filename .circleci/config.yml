#Capstone Config
version: 2.1

executors:
  python:
    docker:
      - image: circleci/python:3.7.3-stretch
  aws:
    docker:
      - image: amazon/aws-cli

jobs:
  linting:
    executor: python
    steps:
      - checkout
      - run:
          name: Make Lint 
          command: |
            sudo apt-get update
            sudo apt-get install python3-venv
            python3 -m venv virtualenv
            . virtualenv/bin/activate
            make install
            make lint
  building:
    machine: true
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: Docker-configuration
          command: |
            docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
            docker build -t 01141942205/devopsproject5:${CIRCLE_WORKFLOW_ID:0:7} .
            docker push 01141942205/devopsproject5:${CIRCLE_WORKFLOW_ID:0:7}
            docker tag 01141942205/devopsproject5:${CIRCLE_WORKFLOW_ID:0:7} 01141942205/devopsproject5:latest
            docker push 01141942205/devopsproject5:latest
  
  configure-aws-authentication:
    executor: aws-eks/python3
    steps:
      -checkout
      -run:
         name: authentication-iam
         command: |
            curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/aws-iam-authenticator
            curl -o aws-iam-authenticator.sha256 https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/aws-iam-authenticator.sha256
            openssl sha1 -sha256 aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
            echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
            aws-iam-authenticator help
            
  deploying:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          devopsproject5
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment.yml
          resource-name: deployment/devopsproject5

  testing:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          devopsproject5
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          name: Test cluster
          command: |
            kubectl get svc
            kubectl get nodes
            kubectl get deployment
                      
orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.11.2

workflows:
  deployment:
    jobs:
      - linting
      - building:
          requires:
            - "linting"
      - aws-eks/create-cluster:
          cluster-name: devopsproject5
      - deploying:
          cluster-name: devopsproject5
          requires:
            - aws-eks/create-cluster
      - aws-eks/update-container-image:
          cluster-name: devopsproject5
          container-image-updates: devopsproject5=01141942205/devopsproject5
          post-steps:
              - kubernetes/delete-resource:
                  resource-names: devopsproject5
                  resource-types: deployment
                  wait: true
          record: true
          requires:
              - deploying
          resource-name: deployment/devopsproject5

      - testing:
          cluster-name: devopsproject5
          requires:
            - aws-eks/update-container-image
